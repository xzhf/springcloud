#spring.cloud.config.env=default
spring:
  application:
    name: turbine

eureka:
  instance:
    #配置访问client的host
    hostname: ${spring.cloud.client.ipAddress}
    #配置显示ip:port
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://10.10.5.185:7002/eureka/


#集群监视器根据turbine.aggregator.clusterConfig配置初始化，为空=default，通过','截取解析（监视器名字）注册监视器，
#EurekaDiscovery根据turbine.appConfig配置获取服务，为空=default
#监视url=[http:https]://[eureka.instance.ip]:[eureka.instance.port]/[turbine.instanceUrlSuffix.[监视器名字]]
#turbine.cluster-name-expression=default==serviceId clusterName=turbine.aggregator.clusterConfig
#turbine.cluster-name-expression=metadata['key']，获取对应eureka instance配置的eureka.instance.metadata-map.key= ${key: value}

#配置不同服务的/[context]/hystrix.stream，在turbine.stream只能通过http://turbine-hostname:port/turbine.stream?cluster=[clusterName]分别查看，因turbineServlet不会再去解析传入的cluster参数，不支持多个cluster
turbine:
  aggregator:
    clusterConfig: CONSUMER,ZUUL
  app-config: consumer,zuul
  cluster-name-expression: metadata['cluster']
  instanceUrlSuffix:
    CONSUMER: /consumer/hystrix.stream
    ZUUL: /zuul/hystrix.stream

#turbine:
#  aggregator:
#    clusterConfig: CONSUMER,ZUUL
#  appConfig: consumer,zuul
#  instanceUrlSuffix:
#    CONSUMER: consumer/hystrix.stream
#    ZUUL: zuul/hystrix.stream

#配置不同服务，context必须一致，因只有一个default监视器，只能配置一个turbine.instanceUrlSuffix.default，此时可以在turbine.stream同时监控appConfig的所有服务
#turbine:
#  appConfig: consumer,zuul
#  clusterNameExpression: "'default'"